(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{340:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"python"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python"}},[t._v("#")]),t._v(" Python")]),t._v(" "),s("h2",{attrs:{id:"builtin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#builtin"}},[t._v("#")]),t._v(" Builtin")]),t._v(" "),s("p",[t._v("Python 内置的库")]),t._v(" "),s("h3",{attrs:{id:"re-正则模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#re-正则模块"}},[t._v("#")]),t._v(" re 正则模块")]),t._v(" "),s("p",[t._v("re 是 Python 的正则模块，用于进行"),s("RouterLink",{attrs:{to:"/notes/util/regex.html"}},[t._v("正则匹配")])],1),t._v(" "),s("h4",{attrs:{id:"compile-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compile-pattern"}},[t._v("#")]),t._v(" "),s("code",[t._v("compile(pattern)")])]),t._v(" "),s("p",[t._v("接受一个字符串 "),s("em",[t._v("pattern")]),t._v("，返回一个正则表达式对象（"),s("code",[t._v("Pattern")]),t._v("）")]),t._v(" "),s("h4",{attrs:{id:"match-pattern-string-flags-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match-pattern-string-flags-0"}},[t._v("#")]),t._v(" "),s("code",[t._v("match(pattern, string, flags=0)")])]),t._v(" "),s("p",[t._v("应用 "),s("em",[t._v("pattern")]),t._v(" 对 "),s("em",[t._v("string")]),t._v(" 进行全文"),s("strong",[t._v("匹配")]),t._v("，返回 "),s("code",[t._v("Match")]),t._v(" 对象")]),t._v(" "),s("p",[t._v("常用 "),s("em",[t._v("flags")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("I")]),t._v(" (Ignore_case)：忽略大小写")]),t._v(" "),s("li",[s("code",[t._v("M")]),t._v(" (Multiline)；匹配多行。"),s("code",[t._v("^")]),t._v(" 匹配第一行开始，"),s("code",[t._v("$")]),t._v(" 匹配最后一行结束")]),t._v(" "),s("li",[s("code",[t._v("S")]),t._v(" (Dot_all)：允许 "),s("code",[t._v(".")]),t._v(" 匹配换行")])]),t._v(" "),s("h4",{attrs:{id:"serch-pattern-string-flags-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#serch-pattern-string-flags-0"}},[t._v("#")]),t._v(" "),s("code",[t._v("serch(pattern, string, flags=0)")])]),t._v(" "),s("p",[t._v("应用 "),s("em",[t._v("pattern")]),t._v(" 对 "),s("em",[t._v("string")]),t._v(" 进行全文"),s("strong",[t._v("查找")]),t._v("，返回 "),s("code",[t._v("Match")]),t._v(" 对象")]),t._v(" "),s("p",[t._v("匹配与查找的区别：匹配是指文本串 "),s("em",[t._v("string")]),t._v(" 全文可以被 "),s("em",[t._v("pattern")]),t._v(" 匹配，查找是指文本串 "),s("em",[t._v("string")]),t._v(" 有一部分可以被 "),s("em",[t._v("pattern")]),t._v(" 匹配")]),t._v(" "),s("h4",{attrs:{id:"sub-pattern-repl-string-count-0-flags-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sub-pattern-repl-string-count-0-flags-0"}},[t._v("#")]),t._v(" "),s("code",[t._v("sub(pattern, repl, string, count=0, flags=0)")])]),t._v(" "),s("p",[t._v("将文本串 "),s("em",[t._v("string")]),t._v(" 中所有与 "),s("em",[t._v("pattern")]),t._v(" 匹配的部分替换为 "),s("em",[t._v("repl")]),t._v("。这里 "),s("em",[t._v("repl")]),t._v(" 可以是一个函数")]),t._v(" "),s("h4",{attrs:{id:"match"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" "),s("code",[t._v("Match")])]),t._v(" "),s("p",[t._v("匹配结果。主要使用其中的两个方法")]),t._v(" "),s("ol",[s("li",[s("code",[t._v(".group(__group=0)")]),t._v("：返回第 __"),s("em",[t._v("group")]),t._v(" 组的匹配结果，"),s("code",[t._v(".group(0)")]),t._v(" 表示文本串本身")]),t._v(" "),s("li",[s("code",[t._v(".groups()")]),t._v("：返回一个字符串元组，包含所有的 group，"),s("strong",[t._v("不含")]),t._v("文本串本身")])]),t._v(" "),s("h3",{attrs:{id:"decimal-浮点高精"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#decimal-浮点高精"}},[t._v("#")]),t._v(" decimal 浮点高精")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.python.org/zh-cn/3/library/decimal.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Document"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"decimal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#decimal"}},[t._v("#")]),t._v(" "),s("code",[t._v("Decimal")])]),t._v(" "),s("p",[t._v("构造方法："),s("code",[t._v("Decimal(value, context)")])]),t._v(" "),s("p",[s("em",[t._v("value")]),t._v(" 是 Decimal 的值，它可以是数字类型，也可以是一个字符串。如果不给此参数，默认为 0"),s("br"),t._v(" "),s("em",[t._v("context")]),t._v(" 用于确定当 "),s("em",[t._v("value")]),t._v(" 为格式错误的字符串时要怎么做，一般不填")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("Decimal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("514")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("514")]),t._v("\n\nDeciaml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.1415926535"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1415926535")]),t._v("\n\nDeciaml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2e5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接受科学计数法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2E+5")]),t._v("\n\nDecimal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果传入一个浮点数，则可能得到不准确的结果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.140000000000000124344978758017532527446746826171875")]),t._v("\n\nDecimal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-INFINITY'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此外，Decimal 还可以接受一些特殊值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Infinity\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[t._v("可用的特殊值值有：NaN、Infinity、-Infinity、-0，大小写不敏感")]),t._v(" "),s("p",[s("strong",[t._v("Decimal 对象只能与 Decimal 对象进行计算")])]),t._v(" "),s("h5",{attrs:{id:"quantize-exp-rounding-none"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#quantize-exp-rounding-none"}},[t._v("#")]),t._v(" "),s("code",[t._v(".quantize(exp, rounding=None)")])]),t._v(" "),s("p",[t._v("按照 "),s("em",[t._v("exp")]),t._v(" 的格式进行舍入，舍入规则为 "),s("em",[t._v("rounding")]),t._v("（默认四舍五入）"),s("br"),t._v(" "),s("em",[t._v("exp")]),t._v(" 可以是一个整数，或是一个 "),s("code",[t._v("Decimal")]),t._v("，舍入的结果与 "),s("em",[t._v("exp")]),t._v(" 有相同的小数位数")]),t._v(" "),s("p",[s("em",[t._v("rounding")]),t._v(" 表（部分）")]),t._v(" "),s("table",[s("tr",[s("td",[t._v("ROUND_CEILING")]),t._v(" "),s("td",[t._v("ROUND_FLOOR")]),t._v(" "),s("td",[t._v("ROUND_UP")]),t._v(" "),s("td",[t._v("ROUND_DOWN")])]),t._v(" "),s("tr",[s("td",[t._v("向无穷舍入")]),t._v(" "),s("td",[t._v("向负无穷舍入")]),t._v(" "),s("td",[t._v("向零的反方向舍入")]),t._v(" "),s("td",[t._v("向零舍入")])])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.python.org/zh-cn/3/library/decimal.html#rounding-modes",target:"_blank",rel:"noopener noreferrer"}},[t._v("Read More"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"getcontext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getcontext"}},[t._v("#")]),t._v(" "),s("code",[t._v("getcontext()")])]),t._v(" "),s("p",[t._v("这是 decimal 模块的上下文对象，根据它的属性，decimal 在计算时会有不同的表现。默认的配置如下")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("getcontext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prec"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rounding"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ROUND_HALF_EVEN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Emin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Emax"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" capitals"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    clamp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" traps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("InvalidOperation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DivisionByZero"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Overflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ol",[s("li",[s("code",[t._v(".prec")]),t._v("：精度，它表示运算结果的有效数字（它只影响运算结果，不影响创建对象时的有效数字）")]),t._v(" "),s("li",[s("code",[t._v(".rounding")]),t._v("：舍入方式，见 "),s("em",[t._v("rounding")]),t._v(" 表")]),t._v(" "),s("li",[s("code",[t._v(".Emin")]),t._v("：指数下界")]),t._v(" "),s("li",[s("code",[t._v(".Emax")]),t._v("：指数上界，这两个界限的取值也是有界的，具体可以看文档")]),t._v(" "),s("li",[s("code",[t._v(".capitals")]),t._v("：只有两个取值，控制打印时指数符号 'e' 的大小写，0 表示小写，1 大写")]),t._v(" "),s("li",[s("code",[t._v(".traps")]),t._v("：允许抛出的异常")])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("DETAILS")]),t._v(" "),s("p",[t._v("Python 为调试专门提供了一个上下文，它不再抛出如除零异常之类的异常")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("setcontext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ExtendedContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngetcontext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prec"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rounding"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ROUND_HALF_EVEN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Emin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    Emax"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" capitals"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" clamp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" traps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \nDecimal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" Decimal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Infinity\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])])]),t._v(" "),s("h3",{attrs:{id:"其它"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),s("h4",{attrs:{id:"求余与整除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#求余与整除"}},[t._v("#")]),t._v(" 求余与整除")]),t._v(" "),s("div",{staticStyle:{display:"flex"}},[s("div",{staticStyle:{flex:"10"}},[s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])])]),t._v(" "),s("div",{staticStyle:{flex:"1"}}),t._v(" "),s("div",{staticStyle:{flex:"10"}},[s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])])])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("在 decimal 模块中，求余与整除的表现与此"),s("strong",[t._v("不同")])]),t._v(" "),s("p",[t._v("两个 Decimal 对象做求余运算，其结果的符号与"),s("strong",[t._v("被除数")]),t._v("保持一致，同时在此基础上为了保证等式 "),s("code",[t._v("x == (x // y) * y + x % y")]),t._v(" 成立，整除的运算结果也有相应调整")])]),t._v(" "),s("h2",{attrs:{id:"sympy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sympy"}},[t._v("#")]),t._v(" SymPy")]),t._v(" "),s("p",[t._v("SymPy 是一个完全由 Python 实现的符号计算库")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.sympy.org/latest/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Document"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"symbol-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#symbol-对象"}},[t._v("#")]),t._v(" Symbol 对象")]),t._v(" "),s("p",[t._v("构造方法："),s("code",[t._v("Symbol(name, **assumptions)")])]),t._v(" "),s("p",[t._v("最基础的 Symbol 类，接受一个字符串 "),s("em",[t._v("name")]),t._v(" 作为变量名。建议 Python 变量名与 "),s("em",[t._v("name")]),t._v(" 保持一致")]),t._v(" "),s("p",[s("em",[t._v("**assumptions")]),t._v(" 是变量的数域，例如 "),s("code",[t._v('Symbol("x", real=True)')]),t._v(" 指定这个变量属于实数域")]),t._v(" "),s("p",[t._v("两个 Symbol 对象相等当且仅当 "),s("em",[t._v("name")]),t._v(" 和 "),s("em",[t._v("**assumptions")]),t._v(" 分别相等")]),t._v(" "),s("p",[s("code",[t._v("symbols(names)")]),t._v("：根据 "),s("em",[t._v("names")]),t._v(" 批量创建变量，支持一些缩略写法")]),t._v(" "),s("p",[s("code",[t._v("sympify(a)")]),t._v("：接受一个字符串 "),s("em",[t._v("a")]),t._v("，将其转为符号表达式")]),t._v(" "),s("h3",{attrs:{id:"assumptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assumptions"}},[t._v("#")]),t._v(" assumptions")]),t._v(" "),s("p",[t._v("数域是 "),s("code",[t._v("simplify")]),t._v(" 化简时的重要参考")]),t._v(" "),s("p",[t._v("由于数域实之间有大量的包含关系，给一个变量设定 assumptions 后，它实际上会获得与此相关的一系列\nassumptions。例如 "),s("code",[t._v("x = Symbol('x', real=True)")]),t._v("，则 x 将获得")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v(">>> {'real': True, 'commutative': True, 'hermitian': True, 'complex': True, \n'imaginary': False, 'extended_real': True, 'infinite': False, 'finite': True}\n")])])]),s("p",[t._v("如果不指定 assumptions，SymPy 默认此变量是满足结合律（commutative）的。常用数域表如下")]),t._v(" "),s("table",[s("tbody",{staticStyle:{"text-align":"center"}},[s("tr",[s("th",[t._v("assumption")]),t._v(" "),s("td",[t._v("commutative")]),t._v(" "),s("td",[t._v("complex")]),t._v(" "),s("td",[t._v("real")]),t._v(" "),s("td",[t._v("even")]),t._v(" "),s("td",[t._v("rational")]),t._v(" "),s("td",[t._v("positive")]),t._v(" "),s("td",[t._v("finite")])]),t._v(" "),s("tr",[s("th",[t._v("description")]),t._v(" "),s("td",[t._v("满足结合律")]),t._v(" "),s("td",[t._v("复数")]),t._v(" "),s("td",[t._v("实数")]),t._v(" "),s("td",[t._v("偶数")]),t._v(" "),s("td",[t._v("有理数")]),t._v(" "),s("td",[t._v("正数")]),t._v(" "),s("td",[t._v("有穷数")])]),t._v(" "),s("tr",[s("th",[t._v("assumption")]),t._v(" "),s("td",[t._v("imaginary")]),t._v(" "),s("td",[t._v("irrational")]),t._v(" "),s("td",[t._v("odd")]),t._v(" "),s("td",[t._v("prime")]),t._v(" "),s("td",[t._v("integer")]),t._v(" "),s("td",[t._v("nonzero")]),t._v(" "),s("td",[t._v("zero")])]),t._v(" "),s("tr",[s("th",[t._v("description")]),t._v(" "),s("td",[t._v("虚数")]),t._v(" "),s("td",[t._v("无理数")]),t._v(" "),s("td",[t._v("奇数")]),t._v(" "),s("td",[t._v("质数")]),t._v(" "),s("td",[t._v("整数")]),t._v(" "),s("td",[t._v("非零数")]),t._v(" "),s("td",[t._v("零")])])])]),t._v(" "),s("p",[t._v("符号对象有 "),s("code",[t._v("is_xxx()")]),t._v(" 方法，可以检查其是否在某个域中。例如 "),s("code",[t._v("is_real()")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("符号变量的 "),s("code",[t._v("is_xxx()")]),t._v(" 方法并没有覆盖所有的数域，例如就"),s("strong",[t._v("没有")]),t._v(" "),s("code",[t._v("is_positive()")])])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.sympy.org/latest/guides/assumptions.html#id28",target:"_blank",rel:"noopener noreferrer"}},[t._v("Read more"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"多项式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多项式"}},[t._v("#")]),t._v(" 多项式")]),t._v(" "),s("h4",{attrs:{id:"expand-e"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expand-e"}},[t._v("#")]),t._v(" "),s("code",[t._v("expand(e)")])]),t._v(" "),s("p",[t._v("多项式展开")]),t._v(" "),s("h4",{attrs:{id:"factor-f"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#factor-f"}},[t._v("#")]),t._v(" "),s("code",[t._v("factor(f)")])]),t._v(" "),s("p",[t._v("因式分解")]),t._v(" "),s("h4",{attrs:{id:"collect-expr-syms"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collect-expr-syms"}},[t._v("#")]),t._v(" "),s("code",[t._v("collect(expr, syms)")])]),t._v(" "),s("p",[t._v("根据 "),s("em",[t._v("syms")]),t._v(" 合并同类项。这里 "),s("em",[t._v("syms")]),t._v(" 可以是一个符号对象的序列，会按顺序依次合并")]),t._v(" "),s("h4",{attrs:{id:"cancel-f"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cancel-f"}},[t._v("#")]),t._v(" "),s("code",[t._v("cancel(f)")])]),t._v(" "),s("p",[t._v("约分。若 "),s("em",[t._v("f")]),t._v(" 是一个和除以一个数的形式（例如 "),s("code",[t._v("(a + b) / 2")]),t._v("），该函数会返回和的形式而非分数")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("cacel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("如果确实想得到分数，可以使用 "),s("code",[t._v("together(expr)")]),t._v("，它会对式子通分，返回 "),s("code",[t._v("a / b")]),t._v(" 的形式")]),t._v(" "),s("h4",{attrs:{id:"apart-f-x-none"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#apart-f-x-none"}},[t._v("#")]),t._v(" "),s("code",[t._v("apart(f, x=None)")])]),t._v(" "),s("p",[t._v("部分分式展开，"),s("code",[t._v("together(expr)")]),t._v(" 的逆函数")]),t._v(" "),s("h3",{attrs:{id:"微积分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微积分"}},[t._v("#")]),t._v(" 微积分")]),t._v(" "),s("h4",{attrs:{id:"diff-f-symbols"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-f-symbols"}},[t._v("#")]),t._v(" "),s("code",[t._v("diff(f, *symbols)")])]),t._v(" "),s("p",[t._v("求导。"),s("em",[t._v("*symbols")]),t._v(" 为需要求导的变量，可以是一个或多个，会按顺序求导")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("diff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" cos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndiff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于二阶导数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndiff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ncos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("diff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用方法求导")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h4",{attrs:{id:"integrate-args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integrate-args"}},[t._v("#")]),t._v(" "),s("code",[t._v("integrate(*args)")])]),t._v(" "),s("p",[t._v("求积分。可以是不定积分，也可以是定积分")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("integrate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nintegrate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用 oo 表示无穷大")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\nintegrate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("oo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("oo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 二重积分")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" pi\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h3",{attrs:{id:"极限与级数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#极限与级数"}},[t._v("#")]),t._v(" 极限与级数")]),t._v(" "),s("h4",{attrs:{id:"极限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#极限"}},[t._v("#")]),t._v(" 极限")]),t._v(" "),s("p",[s("code",[t._v("limit(e, z, z0, dir='+')")]),t._v("：求 "),s("em",[t._v("z")]),t._v(" 趋于 "),s("em",[t._v("z0")]),t._v(" 时表达式 "),s("em",[t._v("e")]),t._v(" 的极限，默认趋于 z0+")]),t._v(" "),s("h4",{attrs:{id:"泰勒展开"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#泰勒展开"}},[t._v("#")]),t._v(" 泰勒展开")]),t._v(" "),s("p",[s("code",[t._v(".series(x, x0=0, n=6)")]),t._v("：当前表达式关于变量 "),s("em",[t._v("x")]),t._v(" 在 "),s("em",[t._v("x0")]),t._v(" 处进行 "),s("em",[t._v("n")]),t._v(" 阶泰勒展开")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("sin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("series"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" O"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"解方程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解方程"}},[t._v("#")]),t._v(" 解方程")]),t._v(" "),s("p",[s("code",[t._v("solve(f, *symbols)")]),t._v("："),s("em",[t._v("f")]),t._v(" 是要解的方程，"),s("em",[t._v("*symbols")]),t._v(" 是方程的未知数")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("solve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("I"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" I"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nsolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Eq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("I"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" I"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nsolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解方程组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nsolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果不指定变量，默认会以字典序选取变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" positive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数域在解方程中的作用")]),t._v("\nsolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("p",[s("code",[t._v("solveset(f, symbol=None, domain=S.Complexes)")]),t._v("：求 "),s("em",[t._v("f")]),t._v(" 关于 "),s("em",[t._v("symbol")]),t._v(" 在 "),s("em",[t._v("domain")]),t._v(" 中的解集")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("solveset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Eq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nsolveset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ImageSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Lambda"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("_n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("I"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Integers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("⋅n⋅ⅈ⋅π │ n ∊ ℤ"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 pretty_print 打印")]),t._v("\n\nsolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 而 solve 无法求出解集")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("该函数"),s("strong",[t._v("不受")]),t._v("变量的数域影响，要在特定的数域中求解，应设置 "),s("em",[t._v("domain")])])]),t._v(" "),s("p",[s("code",[t._v('dsolve(eq, func=None, hint="default")')]),t._v("：用 "),s("em",[t._v("hint")]),t._v(" 方法求解关于未知函数 "),s("em",[t._v("func")]),t._v(" 的微分方程 "),s("em",[t._v("eq")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Function"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"f"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 建立一个关于 x 的符号函数 f")]),t._v("\nf_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("diff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("diff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndsolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Eq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("f_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Eq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" C2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("exp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" cos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"线性代数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性代数"}},[t._v("#")]),t._v(" 线性代数")]),t._v(" "),s("ol",[s("li",[t._v("矩阵："),s("code",[t._v("Matrix([[1, -1], [3, 4], [0, 2]]) >>> Matrix([[1, -1], [3, 4], [0, 2]])")])]),t._v(" "),s("li",[t._v("列向量："),s("code",[t._v("Matrix([1, 2, 3]) >>> Matrix([[1], [2], [3]])")])]),t._v(" "),s("li",[t._v("行向量："),s("code",[t._v("Matrix([1, 2, 3]).T >>> Matrix([[1, 2, 3]])")])])]),t._v(" "),s("h4",{attrs:{id:"eye-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eye-n"}},[t._v("#")]),t._v(" "),s("code",[t._v("eye(n)")])]),t._v(" "),s("p",[t._v("n * n 的单位矩阵")]),t._v(" "),s("h4",{attrs:{id:"zeros-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zeros-n"}},[t._v("#")]),t._v(" "),s("code",[t._v("zeros(n)")])]),t._v(" "),s("p",[t._v("（全）零矩阵")]),t._v(" "),s("h4",{attrs:{id:"ones-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ones-n"}},[t._v("#")]),t._v(" "),s("code",[t._v("ones(n)")])]),t._v(" "),s("p",[t._v("（全）壹矩阵")]),t._v(" "),s("h4",{attrs:{id:"diag-values"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diag-values"}},[t._v("#")]),t._v(" "),s("code",[t._v("diag(values)")])]),t._v(" "),s("p",[t._v("对角矩阵")]),t._v(" "),s("h4",{attrs:{id:"t"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#t"}},[t._v("#")]),t._v(" "),s("code",[t._v(".T")])]),t._v(" "),s("p",[t._v("转置")]),t._v(" "),s("h4",{attrs:{id:"inv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inv"}},[t._v("#")]),t._v(" "),s("code",[t._v(".inv()")])]),t._v(" "),s("p",[t._v("逆")]),t._v(" "),s("h4",{attrs:{id:"det"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#det"}},[t._v("#")]),t._v(" "),s("code",[t._v(".det()")])]),t._v(" "),s("p",[t._v("行列式")]),t._v(" "),s("h4",{attrs:{id:"eigenvals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eigenvals"}},[t._v("#")]),t._v(" "),s("code",[t._v(".eigenvals()")])]),t._v(" "),s("p",[t._v("特征值")]),t._v(" "),s("h4",{attrs:{id:"charpoly"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#charpoly"}},[t._v("#")]),t._v(" "),s("code",[t._v(".charpoly()")])]),t._v(" "),s("p",[t._v("特征多项式（以特征值为根的多项式）")]),t._v(" "),s("h3",{attrs:{id:"逻辑代数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑代数"}},[t._v("#")]),t._v(" 逻辑代数")]),t._v(" "),s("p",[t._v("符号：与 "),s("code",[t._v("&")]),t._v("、或 "),s("code",[t._v("|")]),t._v("、非 "),s("code",[t._v("~")]),t._v("、蕴涵 "),s("code",[t._v(">>")]),t._v(" （"),s("code",[t._v("p >> q")]),t._v(" 的打印式为 "),s("code",[t._v("Implies(p, q)")]),t._v("）")]),t._v(" "),s("h4",{attrs:{id:"sopform-variables-minterms-dontcares-none"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sopform-variables-minterms-dontcares-none"}},[t._v("#")]),t._v(" "),s("code",[t._v("SOPform(variables, minterms, dontcares=None)")])]),t._v(" "),s("p",[t._v("以 "),s("em",[t._v("variables")]),t._v(" 为逻辑变量，参考最小项 "),s("em",[t._v("minterms")]),t._v(" 和无关项 "),s("em",[t._v("dontcares")]),t._v(" 生成逻辑表达式")]),t._v(" "),s("p",[s("em",[t._v("minterms")]),t._v(" 和 "),s("em",[t._v("dontcares")]),t._v(" 的形式一样，可以是整数 "),s("code",[t._v("[1, 2, 3]")]),t._v("，逻辑取值 "),s("code",[t._v("[[0, 0, 0], [1, 0, 0], [1, 0, 1]]")]),t._v("，或是用字典表示的逻辑取值 "),s("code",[t._v("[{x: 0, y: 0, z: 0}]")]),t._v("。还可以是这几种的混合使用 "),s("code",[t._v("[1, 2, [0, 0, 0], {x: 1, z:1}]")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("SOP 是 Sum Of Product 的简写，实际上指的是最小项之和")])]),t._v(" "),s("h4",{attrs:{id:"posform-variables-minterms-dontcares-none"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#posform-variables-minterms-dontcares-none"}},[t._v("#")]),t._v(" "),s("code",[t._v("POSform(variables, minterms, dontcares=None)")])]),t._v(" "),s("p",[t._v("以 "),s("em",[t._v("variables")]),t._v(" 为逻辑变量，参考"),s("strong",[t._v("最小项")]),t._v(" "),s("em",[t._v("minterms")]),t._v(" 和无关项 "),s("em",[t._v("dontcares")]),t._v(" 生成逻辑表达式")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("POS 是 Product Of Sum 的简写，它产生的结果本质上与 SOP 一致，都保证在 "),s("em",[t._v("variables")]),t._v(" 取 "),s("em",[t._v("minterms")]),t._v(" 时，"),s("strong",[t._v("表达式返回 1")]),t._v("，它求的"),s("strong",[t._v("不是")]),t._v("最大项之积")])]),t._v(" "),s("h4",{attrs:{id:"to-cnf-expr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#to-cnf-expr"}},[t._v("#")]),t._v(" "),s("code",[t._v("to_cnf(expr)")])]),t._v(" "),s("p",[t._v("求合取范式（Conjunctive Normal Form. CNF）")]),t._v(" "),s("h4",{attrs:{id:"to-dnf-expr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#to-dnf-expr"}},[t._v("#")]),t._v(" "),s("code",[t._v("to_dnf(expr)")])]),t._v(" "),s("p",[t._v("求析取范式（Disjunctive Normal Form. DNF）")]),t._v(" "),s("h4",{attrs:{id:"satisfiable-expr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#satisfiable-expr"}},[t._v("#")]),t._v(" "),s("code",[t._v("satisfiable(expr)")])]),t._v(" "),s("p",[t._v("求 "),s("em",[t._v("expr")]),t._v(" 的所有成真赋值")]),t._v(" "),s("h4",{attrs:{id:"bool-map-bool1-bool2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bool-map-bool1-bool2"}},[t._v("#")]),t._v(" "),s("code",[t._v("bool_map(bool1, bool2)")])]),t._v(" "),s("p",[t._v("判断两个逻辑表达式是否等价，如果等价，给出从 "),s("em",[t._v("bool1")]),t._v(" 变换为 "),s("em",[t._v("bool2")]),t._v(" 的方案")]),t._v(" "),s("p",[s("code",[t._v("bool_map(p >> q, ~a | b) >>> (Q | ~P, {P: A, Q: B})")])]),t._v(" "),s("p",[t._v("该函数返回一个元组，第一项表示 "),s("em",[t._v("bool1")]),t._v(" 可以转化为此形式，第二项表示用这此方式进行变量替换，即可从 "),s("em",[t._v("bool1")]),t._v(" 得到 "),s("em",[t._v("bool2")])]),t._v(" "),s("p",[t._v("在实际使用中，如果两个表达式采用了相同的逻辑符号，则第二部分没有意义")]),t._v(" "),s("h3",{attrs:{id:"其它-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其它-2"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),s("h4",{attrs:{id:"latex-expr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#latex-expr"}},[t._v("#")]),t._v(" "),s("code",[t._v("latex(expr)")])]),t._v(" "),s("p",[t._v("返回 "),s("em",[t._v("expr")]),t._v(" 的 LaTex 表达式")]),t._v(" "),s("h4",{attrs:{id:"pretty-print-expr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pretty-print-expr"}},[t._v("#")]),t._v(" "),s("code",[t._v("pretty_print(expr)")])]),t._v(" "),s("p",[t._v("更符合数学形式的打印式，简写 "),s("code",[t._v("pprint")]),t._v("（与 Python 内置的重名）")]),t._v(" "),s("h3",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/111573239",target:"_blank",rel:"noopener noreferrer"}},[t._v("[1] Longson.SymPy 符号计算基本教程[EB/OL].知乎,2020."),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/364901583",target:"_blank",rel:"noopener noreferrer"}},[t._v("[2] xingyongkang.使用sympy实现命题逻辑运算[EB/OL].知乎,2021."),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"keyboard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keyboard"}},[t._v("#")]),t._v(" keyboard")]),t._v(" "),s("p",[t._v("key 与 hotkey 的区别：key 是单个按键，hotkey 是一组按键")]),t._v(" "),s("p",[t._v("在 keyboard 中，一个 key 只有两种状态，分别是 "),s("code",[t._v("keyboard.KEY_DOWN")]),t._v(" 和 "),s("code",[t._v("keyboard.KEY_UP")]),t._v("\n，对应按键的按下和释放，一次点击被理解为先 "),s("code",[t._v("keyboard.KEY_DOWN")]),t._v(" 再 "),s("code",[t._v("keyboard.KEY_UP")])]),t._v(" "),s("p",[t._v("如果您正使用 windows 系统，您可能知道按下 "),s("code",[t._v("windows")]),t._v(" 键会弹出开始菜单。但事实上是"),s("strong",[t._v("释放")]),t._v(" "),s("code",[t._v("windows")]),t._v("\n键会弹出开始菜单，长按 "),s("code",[t._v("windows")]),t._v(" 键再释放，您就会明白这句话的意思")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/boppreh/keyboard",target:"_blank",rel:"noopener noreferrer"}},[t._v("Document"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"常用函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用函数"}},[t._v("#")]),t._v(" 常用函数")]),t._v(" "),s("h4",{attrs:{id:"send-hotkey-do-press-do-release"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#send-hotkey-do-press-do-release"}},[t._v("#")]),t._v(" "),s("code",[t._v("send(hotkey, do_press, do_release)")])]),t._v(" "),s("p",[t._v("令操作系统执行此热键（顺序按下，然后逆序释放）"),s("br"),t._v(" "),s("em",[t._v("press")]),t._v(" 和 "),s("em",[t._v("release")]),t._v(" 封装了该函数，分别只执行"),s("em",[t._v("按下")]),t._v(" 和 "),s("em",[t._v("释放")])]),t._v(" "),s("h4",{attrs:{id:"hook-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hook-callback"}},[t._v("#")]),t._v(" "),s("code",[t._v("hook(callback)")])]),t._v(" "),s("p",[t._v("监听所有按键事件，包括按下和释放"),s("br"),t._v(" "),s("em",[t._v("on_press")]),t._v(" 和 "),s("em",[t._v("on_release")]),t._v(" 封装了该函数，分别只监听"),s("em",[t._v("按下")]),t._v(" 和 "),s("em",[t._v("释放")])]),t._v(" "),s("p",[t._v("可用于：“按下任意键继续...”")]),t._v(" "),s("h4",{attrs:{id:"hook-key-key-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hook-key-key-callback"}},[t._v("#")]),t._v(" "),s("code",[t._v("hook_key(key, callback)")])]),t._v(" "),s("p",[t._v("监听特定按键，包括按下和释放"),s("br"),t._v(" "),s("em",[t._v("on_press_key")]),t._v(" 和 "),s("em",[t._v("on_release_key")]),t._v(" 封装了该函数，分别只监听"),s("em",[t._v("按下")]),t._v(" 和 "),s("em",[t._v("释放")])]),t._v(" "),s("h4",{attrs:{id:"remap-key-src-dst"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remap-key-src-dst"}},[t._v("#")]),t._v(" "),s("code",[t._v("remap_key(src, dst)")])]),t._v(" "),s("p",[t._v("重映射按键"),s("br"),t._v("\n当按下 "),s("em",[t._v("src")]),t._v(" 时，相当于按下 "),s("em",[t._v("dst")])]),t._v(" "),s("h4",{attrs:{id:"add-hotkey-hotkey-callback-args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-hotkey-hotkey-callback-args"}},[t._v("#")]),t._v(" "),s("code",[t._v("add_hotkey(hotkey, callback, args=())")])]),t._v(" "),s("p",[t._v("自定义热键，"),s("em",[t._v("args")]),t._v(" 会传给 "),s("em",[t._v("callback")]),t._v(" 作为参数")]),t._v(" "),s("h4",{attrs:{id:"remap-hotkey-src-dst"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remap-hotkey-src-dst"}},[t._v("#")]),t._v(" "),s("code",[t._v("remap_hotkey(src, dst)")])]),t._v(" "),s("p",[t._v("重映射热键"),s("br"),t._v("\n当按下 "),s("em",[t._v("src")]),t._v(" 时，相当于按下 "),s("em",[t._v("dst")])]),t._v(" "),s("h4",{attrs:{id:"write-text-delay-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#write-text-delay-0"}},[t._v("#")]),t._v(" "),s("code",[t._v("write(text, delay=0)")])]),t._v(" "),s("p",[t._v("逐字符向操作系统输入 "),s("em",[t._v("text")]),s("br"),t._v(" "),s("em",[t._v("delay")]),t._v(" 为各单字写入的时间间隔，单位秒")]),t._v(" "),s("h4",{attrs:{id:"wait-hotkey-none"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wait-hotkey-none"}},[t._v("#")]),t._v(" "),s("code",[t._v("wait(hotkey=None)")])]),t._v(" "),s("p",[t._v("阻塞线程直到按下 hotkey，一般用于结束此脚本")]),t._v(" "),s("h4",{attrs:{id:"record-until-escape"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#record-until-escape"}},[t._v("#")]),t._v(" "),s("code",[t._v("record(until='escape')")])]),t._v(" "),s("p",[t._v("记录接下来的用户输入直到用户按下 hotkey，它返回一个 "),s("em",[t._v("list[KeyboardEvent]")])]),t._v(" "),s("h4",{attrs:{id:"play-events-speed-factor-1-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#play-events-speed-factor-1-0"}},[t._v("#")]),t._v(" "),s("code",[t._v("play(events, speed_factor=1.0)")])]),t._v(" "),s("p",[t._v("执行一个 "),s("em",[t._v("list[KeyboardEvent]")]),t._v("，它会以用户输入的速度执行（即 "),s("em",[t._v("list")]),t._v(" 有记录各个按键的时间间隔）")]),t._v(" "),s("h4",{attrs:{id:"add-word-listener-word-callback-triggers-space-match-suffix-false-timeout-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-word-listener-word-callback-triggers-space-match-suffix-false-timeout-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("add_word_listener(word, callback, triggers=['space'], match_suffix=False, timeout=2)")])]),t._v(" "),s("p",[t._v("每当输入 "),s("em",[t._v("word")]),t._v(" + "),s("em",[t._v("(trigger)")]),t._v(" 时，执行 "),s("em",[t._v("callback")]),t._v("，若 "),s("em",[t._v("match_suffix")]),t._v(" 为真，则以 "),s("em",[t._v("word")]),t._v(" 结尾的词也可以触发")]),t._v(" "),s("h4",{attrs:{id:"add-abbreviation-source-text-replacement-text-match-suffix-false-timeout-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-abbreviation-source-text-replacement-text-match-suffix-false-timeout-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("add_abbreviation(source_text, replacement_text, match_suffix=False, timeout=2)")])]),t._v(" "),s("p",[t._v("当输入 "),s("em",[t._v("source_text")]),t._v(" + "),s("em",[t._v("(space)")]),t._v(" 时，替换为 "),s("em",[t._v("replacement_text")]),t._v("。"),s("strong",[t._v("替换是通过执行删除再写入进行的")])])])}),[],!1,null,null,null);s.default=n.exports}}]);